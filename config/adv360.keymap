/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmsk: hmsk {
            compatible = "zmk,behavior-sticky-key";
            label = "homerow sticky";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };

        cpf: cpf {
            compatible = "zmk,behavior-tap-dance";
            label = "CPF";
            #binding-cells = <0>;
            bindings = <&cpf1>, <&cpf2>, <&cpf3>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape_left {
            bindings = <&kp ESCAPE>;
            key-positions = <31 33>;
            layers = <0 1>;
        };

        escape_right {
            bindings = <&kp ESCAPE>;
            key-positions = <40 42>;
            layers = <0 1>;
        };

        combo_tab_left {
            bindings = <&kp TAB>;
            key-positions = <17 18>;
            layers = <0 1>;
        };

        combo_tab_right {
            bindings = <&kp TAB>;
            key-positions = <23 24>;
            layers = <0 1>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp D &kp U &kp A &kp R &kp D &kp O &kp L &kp L &kp O &kp B &kp A &kp C &kp K &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        cpf1: cpf1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N5 &kp N5 &kp N7 &kp N7 &kp N8 &kp N8 &kp N9 &kp N9 &kp N4 &kp N4>;
            label = "CPF1";
            tap-ms = <10>;
            wait-ms = <10>;
        };

        cpf2: cpf2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp N5 &kp N2 &kp N6 &kp N1 &kp N8 &kp N7 &kp N6 &kp N1 &kp N6 &kp N8>;
            label = "CPF2";
            tap-ms = <10>;
            wait-ms = <10>;
        };

        cpf3: cpf3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N9 &kp N9 &kp N8 &kp N7 &kp N7 &kp N4 &kp N7 &kp N9 &kp N0 &kp N6>;
            label = "CPF3";
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none                   &none           &none              &none            &none                   &mo 5                                                                                       &mo 5        &none                   &none        &none           &none              &none                       &none
&none  &kp Q                   &kp W           &kp E              &kp R            &kp T                   &mt LC(X) LC(C)                                                                             &none        &kp Y                   &kp U        &kp I           &kp O              &kp P                       &none
&none  &kp A                   &kp S           &kp D              &kp F            &hm LS(LA(LC(LGUI))) G  &kp LC(V)        &kt LG(LS(PRINTSCREEN))  &kp PRINTSCREEN      &none       &none            &none        &hm RS(RA(RC(RGUI))) H  &kp J        &kp K           &kp L              &kp SEMICOLON               &none
&none  &hm LS(LA(LC(LGUI))) Z  &hm LEFT_ALT X  &hm LGUI C         &hm LCTRL V      &kp B                                                             &none                &kp DELETE                                &kp N                   &hm RCTRL M  &hm RGUI COMMA  &hm RIGHT_ALT DOT  &hm RS(RA(RC(RGUI))) SLASH  &none
&mo 4  &kp LS(LA(LCTRL))       &kp C_PP        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                          &lt 1 SPACE      &lt 2 ENTER              &kp TAB              &caps_word  &lt 2 BACKSPACE  &lt 2 SPACE                          &kp C_PREV   &kp C_NEXT      &none              &none                       &mo 4
            >;
        };

        smartnumpad {
            bindings = <
&none  &none                 &none   &none   &none   &none       &none                                           &none   &none                  &none              &none             &none              &none                 &none
&none  &kp N0                &kp N7  &kp N8  &kp N9  &kp EQUAL   &none                                           &none   &kp LEFT_PARENTHESIS   &kp CARET          &kp DOLLAR        &kp GRAVE          &kp BACKSLASH         &none
&mo 4  &sk LSHIFT            &kp N4  &kp N5  &kp N6  &kp ESCAPE  &none   &none  &none      &none  &none          &none   &kp TAB                &kp SQT            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &sk RSHIFT            &none
&none  &sk LS(LA(LC(LGUI)))  &kp N1  &kp N2  &kp N3  &kp MINUS                  &none      &none                         &kp RIGHT_PARENTHESIS  &sk RIGHT_CONTROL  &sk RGUI          &sk RIGHT_ALT      &sk RS(RA(RC(RGUI)))  &none
&none  &none                 &none   &none   &none               &trans  &none  &none      &none  &kp BACKSPACE  &trans                         &none              &none             &none              &none                 &none
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans     &trans  &trans           &trans     &trans   &trans                                      &trans  &trans    &trans         &trans       &trans     &trans     &trans
&trans  &sl 3      &trans  &kp LC(Z)        &kp LC(Y)  &trans   &trans                                      &trans  &trans    &kp HOME       &kp END      &trans     &trans     &trans
&trans  &kp LC(B)  &trans  &trans           &kp ENTER  &kp ESC  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp LC(B)  &trans
&trans  &trans     &trans  &mt LC(X) LC(C)  &kp LC(V)  &trans                   &trans      &trans                  &trans    &kp PAGE_DOWN  &kp PAGE_UP  &trans     &trans     &trans
&trans  &trans     &trans  &trans           &trans              &trans  &trans  &trans      &trans  &trans  &trans            &trans         &trans       &trans     &trans     &trans
            >;
        };

        macro {
            bindings = <
&to 0   &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &email  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &cpf    &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2                &kp F3    &kp F4                &kp F5                &kp F6  &trans                                      &mo 5   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans                &kp F7    &kp F8                &kp F9                &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans                &kp F4    &kp F5                &kp F6                &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &sk LS(LA(LC(LGUI)))  &kp F1    &kp F2                &kp F3                &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans                &kp CAPS  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &trans        &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
