/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        slashes: slashes {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASHES";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        slash_pipe: slash_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_PIPE";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LSFT)>;
            bindings = <&slashes>, <&kp PIPE>;
        };

        plus_minus: plus_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS_MINUS";
            bindings = <&kt PLUS>, <&kt MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        vim_start_end: vim_start_end {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_START_END";
            bindings = <&kp LCTRL>, <&kp DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        at_slash: at_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_SLASH";
            bindings = <&kp AT>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        question_exclamation: question_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_EXCLAMATION";
            bindings = <&kp QUESTION>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        math_operators: math_operators {
            compatible = "zmk,behavior-mod-morph";
            label = "MATH_OPERATORS";
            bindings = <&kp EQUAL>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        and: and {
            compatible = "zmk,behavior-mod-morph";
            label = "AND";
            bindings = <&kp ASTERISK>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        brackets: brackets {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKETS";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        braces: braces {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACES";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "PARENTHESIS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        compare: compare {
            compatible = "zmk,behavior-mod-morph";
            label = "COMPARE";
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        brackes: brackes {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKES";
            bindings = <&brackets>, <&braces>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        all_math_shit: all_math_shit {
            compatible = "zmk,behavior-mod-morph";
            label = "ALL_MATH_SHIT";
            bindings = <&parenthesis>, <&compare>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        portuguese_1: portuguese_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "PORTUGUESE_1";
            bindings = <&kt TILDE>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none    &kp N1             &kp N2          &kp N3             &kp N4            &kp N5  &mo 2                                                                    &mo 2              &kp N6  &kp N7             &kp N8           &kp N9           &kp N0          &none
&none    &kp Q              &kp W           &kp E              &kp R             &kp T   &mt LC(C) LC(X)                                                          &kp RA(RC(RG(S)))  &kp Y   &kp U              &kp I            &kp O            &kp P           &none
&kp TAB  &hm LCTRL A        &hm LEFT_ALT S  &hm LEFT_GUI D     &hm LEFT_SHIFT F  &kp G   &kp LC(V)        &none      &kp PRINTSCREEN      &none      &none        &none              &kp H   &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm LCTRL SEMI  &none
&none    &kp Z              &kp X           &kp C              &kp V             &kp B                               &kp HOME             &kp PG_UP                                  &kp N   &kp M              &kp COMMA        &kp DOT          &kp SQT         &none
&mo 1    &kp LS(LA(LCTRL))  &kp C_PP        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP           &lt 3 BACKSPACE  &lt 5 ESC  &kp END              &kp PG_DN  &lt 4 ENTER  &kp SPACE                  &kp C_PREV         &kp C_NEXT       &none            &none           &mo 1
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4                &kp F5                &kp F6  &trans                                      &mo 2   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans                &trans                &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans                &trans                &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans                &trans                &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &trans        &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        symbols_layer {
            bindings = <
&none  &trans     &trans        &kp HASH      &kp DOLLAR  &kp PERCENT  &none                                      &none        &kp CARET       &kp AMPERSAND  &kp STAR               &none  &none           &none
&none  &kp HASH   &kp EXCL      &kp QUESTION  &kp AT      &kp GRAVE    &none                                      &none        &all_math_shit  &at_slash      &question_exclamation  &none  &none           &none
&none  &kp CARET  &kp MINUS     &kp PLUS      &kp EQUAL   &kp PERCENT  &none  &none  &none      &none  &none      &none        &brackes        &slashes       &kp RBKT               &none  &vim_start_end  &none
&none  &kp FSLH   &kp NUMBER_1  &kp PIPE      &kp AMPS    &kp TILDE                  &none      &none                          &trans          &and           &kp RIGHT_PARENTHESIS  &none  &kp BSLH        &none
&none  &none      &none         &none         &none                    &none  &none  &none      &none  &kp UNDER  &key_repeat                  &kp LESS_THAN  &kp GREATER_THAN       &none  &none           &none
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans     &trans     &trans     &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp LC(V)  &kp PG_DN  &kp PG_UP  &mt LC(X) LC(C)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT        &none   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp LC(A)  &kp TAB    &kp ESC    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans             &trans     &trans     &trans           &trans  &trans
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans          &trans           &trans           &trans                   &trans              &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp N7           &kp N8           &kp N9                   &mt PLUS MINUS      &trans                                      &trans  &trans  &none   &none   &none   &trans  &trans
&trans  &mt LCTRL LGUI  &mt LEFT_ALT N4  &mt LEFT_GUI N5  &mt LEFT_SHIFT NUMBER_6  &kp N0              &trans  &trans  &trans      &trans  &trans  &trans  &trans  &none   &none   &none   &trans  &trans
&trans  &trans          &kp N1           &kp N2           &kp N3                   &mt ASTERISK SLASH                  &trans      &trans                  &trans  &none   &none   &none   &trans  &trans
&trans  &trans          &trans           &trans           &trans                                       &trans  &trans  &trans      &trans  &trans  &none           &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
