/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmsk: hmsk {
            compatible = "zmk,behavior-sticky-key";
            label = "homerow sticky";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
            ignore-modifiers;
        };

        cpf: cpf {
            compatible = "zmk,behavior-tap-dance";
            label = "CPF";
            #binding-cells = <0>;
            bindings = <&cpf1>, <&cpf2>, <&cpf3>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape_left {
            bindings = <&kp ESCAPE>;
            key-positions = <31 33>;
            layers = <0 7>;
        };

        escape_right {
            bindings = <&kp ESCAPE>;
            key-positions = <40 42>;
            layers = <0 7>;
        };

        combo_tab_left {
            bindings = <&kp TAB>;
            key-positions = <17 18>;
            layers = <0 7>;
        };

        combo_tab_right {
            bindings = <&kp TAB>;
            key-positions = <23 24>;
            layers = <0 7>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp D &kp U &kp A &kp R &kp D &kp O &kp L &kp L &kp O &kp B &kp A &kp C &kp K &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        cpf1: cpf1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N5 &kp N5 &kp N7 &kp N7 &kp N8 &kp N8 &kp N9 &kp N9 &kp N4 &kp N4>;
            label = "CPF1";
            tap-ms = <10>;
            wait-ms = <10>;
        };

        cpf2: cpf2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp N5 &kp N2 &kp N6 &kp N1 &kp N8 &kp N7 &kp N6 &kp N1 &kp N6 &kp N8>;
            label = "CPF2";
            tap-ms = <10>;
            wait-ms = <10>;
        };

        cpf3: cpf3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N9 &kp N9 &kp N8 &kp N7 &kp N7 &kp N4 &kp N7 &kp N9 &kp N0 &kp N6>;
            label = "CPF3";
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none              &none           &none              &none            &none  &mo 2                                                                                       &mo 2              &none  &none        &none         &none            &none               &none
&none  &kp Q              &kp W           &kp E              &kp R            &kp T  &mt LC(X) LC(C)                                                                             &kp RA(RC(RG(S)))  &kp Y  &kp U        &kp I         &kp O            &kp P               &none
&none  &hm LGUI A         &hm LEFT_ALT S  &hm LSHIFT D       &hm LCTRL F      &kp G  &kp LC(V)        &kt LG(LS(PRINTSCREEN))  &kp PRINTSCREEN      &none       &none            &none              &kp H  &hm RCTRL J  &hm LSHIFT K  &hm RIGHT_ALT L  &hm RGUI SEMICOLON  &none
&none  &lt 4 Z            &kp X           &kp C              &kp V            &kp B                                            &none                &kp DELETE                                      &kp N  &kp M        &kp COMMA     &kp DOT          &kp SLASH           &none
&mo 1  &kp LS(LA(LCTRL))  &kp C_PP        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &lt 7 SPACE      &lt 3 ENTER              &kp TAB              &caps_word  &lt 3 BACKSPACE  &hmsk RIGHT_SHIFT         &kp C_PREV   &kp C_NEXT    &none            &none               &mo 1
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3    &kp F4                &kp F5                &kp F6  &trans                                      &mo 2   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans    &email                &trans                &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans    &trans                &trans                &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans    &cpf                  &trans                &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &kp CAPS  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &to 8         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &trans        &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans  &trans                                      &trans  &trans     &trans         &trans       &trans           &trans     &trans
&trans  &trans  &kp LC(W)  &trans  &trans  &trans  &trans                                      &trans  &kp LC(V)  &kp LC(Y)      &kp LC(Z)    &mt LC(X) LC(C)  &kp LC(P)  &trans
&trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT        &none      &trans
&trans  &trans  &kp LC(X)  &trans  &trans  &trans                  &trans      &trans                  &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END          &trans     &trans
&trans  &trans  &trans     &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans             &trans         &trans       &trans           &trans     &trans
            >;
        };

        button {
            bindings = <
&trans  &trans    &trans    &trans           &trans     &trans  &trans                                             &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &kp LC(Z)        &kp LC(Y)  &trans  &trans                                             &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL        &kp LSHFT  &trans  &trans    &trans    &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &mt LC(X) LC(C)  &kp LC(V)  &trans                      &trans         &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans           &trans             &mkp MB1  &mkp MB2  &mkp MCLK      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        util {
            bindings = <
&trans  &trans      &trans          &trans       &trans         &trans  &trans                                           &trans  &trans  &trans       &trans       &trans      &trans      &trans
&trans  &trans      &trans          &trans       &kp RET        &trans  &trans                                           &trans  &trans  &kp RET      &trans       &trans      &trans      &trans
&trans  &hmsk LGUI  &hmsk LEFT_ALT  &hmsk LCTRL  &hmsk LSHFT    &trans  &trans   &trans      &trans      &trans  &trans  &trans  &trans  &hmsk RSHFT  &hmsk RCTRL  &hmsk RALT  &hmsk RGUI  &trans
&trans  &trans      &trans          &trans       &kp BACKSPACE  &trans                       &trans      &trans                  &trans  &kp BSPC     &trans       &trans      &trans      &trans
&trans  &trans      &trans          &trans       &trans                 &kp TAB  &kp ESCAPE  &trans      &trans  &trans  &trans          &trans       &trans       &trans      &trans      &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans     &trans        &trans        &trans        &trans         &trans                                      &trans  &trans            &trans                 &trans           &trans     &trans     &trans
&trans  &trans     &kp LBKT      &kp LS(LBRC)  &kp LS(LPAR)  &kp LESS_THAN  &trans                                      &trans  &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT   &trans     &trans
&trans  &kp CARET  &kp ASTERISK  &kp EQUAL     &kp SQT       &kp DOLLAR     &trans  &trans  &trans      &trans  &trans  &trans  &kp BSLH          &kp DOUBLE_QUOTES      &kp AMPERSAND    &kp PIPE   &kp COLON  &trans
&trans  &kp EXCL   &kp PERCENT   &kp HASH      &kp UNDER     &kp MINUS                      &trans      &trans                  &kp PLUS          &kp QUESTION           &kp GRAVE        &kp TILDE  &trans     &trans
&trans  &trans     &trans        &trans        &trans                       &trans  &trans  &trans      &trans  &trans  &trans                    &trans                 &trans           &trans     &trans     &trans
            >;
        };

        smartnumpad {
            bindings = <
&none  &none       &none   &none   &none   &none      &none                                          &none   &none  &none          &none                   &none                        &none       &none
&none  &kp CARET   &kp N7  &kp N8  &kp N9  &kp N0     &none                                          &none   &none  &trans         &kp FSLH                &kp BSLH                     &kp DOLLAR  &none
&none  &hmsk LGUI  &kp N4  &kp N5  &kp N6  &kp EQUAL  &none  &none  &none      &none  &none          &none   &none  &hm RCTRL SQT  &hm RSHFT LEFT_BRACKET  &hm RIGHT_ALT RIGHT_BRACKET  &trans      &none
&none  &none       &kp N1  &kp N2  &kp N3  &kp MINUS                &none      &none                         &none  &kp GRAVE      &trans                  &trans                       &trans      &none
&none  &none       &none   &none   &none              &none  &none  &none      &none  &kp BACKSPACE  &trans         &none          &none                   &none                        &none       &none
            >;
        };

        no_hm_default {
            bindings = <
&to 0     &none              &none     &none              &none            &none  &mo 2                                                                                       &mo 2              &none  &none       &none       &none    &none      &none
&none     &kp Q              &kp W     &kp E              &kp R            &kp T  &mt LC(C) LC(X)                                                                             &kp RA(RC(RG(S)))  &kp Y  &kp U       &kp I       &kp O    &kp P      &none
&kp LGUI  &kp A              &kp S     &kp D              &kp F            &kp G  &kp LC(V)        &kt LG(LS(PRINTSCREEN))  &kp PRINTSCREEN      &none       &none            &none              &kp H  &kp J       &kp K       &kp L    &kp SEMI   &none
&none     &kp Z              &kp X     &kp C              &kp V            &kp B                                            &none                &kp DELETE                                      &kp N  &kp M       &kp COMMA   &kp DOT  &kp SLASH  &none
&mo 1     &kp LS(LA(LCTRL))  &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &lt 7 SPACE      &lt 7 ENTER              &kp TAB              &caps_word  &lt 3 BACKSPACE  &hmsk RIGHT_SHIFT         &kp C_PREV  &kp C_NEXT  &none    &none      &mo 1
            >;
        };
    };
};
